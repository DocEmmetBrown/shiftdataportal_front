version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/tsp-data-portal-v2/server # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:11.5.0 # ...with this image as the primary container; this is where all `steps` will run
    steps: # a collection of executable commands
      - checkout:
          path: ~/tsp-data-portal-v2 # special step to check out source code to working directory
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-yarn
          command: yarn
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: LS
          command: pwd
      - run:
          name: Run Test
          command: yarn test
      - run:
          name: Run typescript which is the same as running a build
          command: yarn build
      - store_artifacts:
          path: coverage
      #     environment:
      #       JEST_JUNIT_OUTPUT: js-test-results.xml
      # - store_artifacts: # special step to save test results as as artifact
      #     # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
      #     path: js-test-results.xml
      #     prefix: tests
      # - store_artifacts: # special step to save test results as as artifact
      #     # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
      #     path: coverage
      #     prefix: coverage
      # - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
      #     path: js-test-results.xml
      #     # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
